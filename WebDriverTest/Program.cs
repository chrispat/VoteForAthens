using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace WebDriverTest
{
    class Program
    {
        static void Main(string[] args)
        {
            RandomProportional rp = new RandomProportional();

            Console.WriteLine("Will vote for Athens Drive until midnight 12/05/2018 on a 0 - 1 minute interval");
            while (DateTime.Now != DateTime.Parse("12/05/2018 23:59:59"))
            {
                IWebDriver chrome = new ChromeDriver();
                chrome.Url = "https://www.wralfm.com/uncategorized/christmas-choir-competition-div-2-day-3/";
                Thread.Sleep(5000);
                IWebElement input = chrome.FindElement(By.Id("c_1_5c073b07e4b0f6d21672f6eb-canvas"));
                input.Click();
                Thread.Sleep(250);
                IWebElement button = chrome.FindElement(By.Id("OPP-poll-vote-button"));
                button.Click();
                Thread.Sleep(2000);
                chrome.Quit();

                Double waitMilliseconds = rp.NextDouble() * 60000;
                Console.WriteLine("Sleeping for {0} milliseconds", waitMilliseconds);
                Thread.Sleep(Convert.ToInt32(waitMilliseconds));
            }
        }
    }

    // This derived class converts the uniformly distributed random 
    // numbers generated by base.Sample( ) to another distribution.
    public class RandomProportional : Random
    {
        // The Sample method generates a distribution proportional to the value 
        // of the random numbers, in the range [0.0, 1.0].
        protected override double Sample()
        {
            return Math.Sqrt(base.Sample());
        }

        public override int Next()
        {
            return (int)(Sample() * int.MaxValue);
        }
    }
}
